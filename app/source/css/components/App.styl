/**
    App specific styles, including anothers components mods
    specific for when use in the app context.
**/
@import '../utils/styleguideVars.styl'
@import 'AppNav.styl'
@import 'AppNav--home.styl'
@import '../utils/input-placeholder.styl';

/* More app specific styles */
.App {

    // At the beggining, all content must be hidden except
    // an splash screen, up to the app being flagged as 'ready'
    > body > * {
        visibility: hidden;

        &.SplashScreen {
            visibility: visible;
        }
    }
    &.is-ready > body > * {
        visibility: inherit;

        &.SplashScreen {
            visibility: hidden;
        }
    }

    /** We use ever all the available screen **/
    height: 100%;
    // Fix for iOS smooth scrolling
    overflow: auto;
    // Smoother scrolling and inertia effect for iOS
    // The property is inheret to every element with scroll enabled (overflow:auto|scroll)
    // Be carefull since scrolling this way has a bug with fixed elements (typically navbar)
    // on that cases is better to use 'absolute' positioning changing the scrolling to a
    // content element rather than the document or the container of the absolute elements.
    -webkit-overflow-scrolling: touch;
    [data-activity] {
        -webkit-overflow-scrolling: touch;
    }

    > body {
        height: 100%;
        /* Space for app-nav on top */
        // media-app-navbar and big
        padding-top: $app-navbar-height;
        @media $media-big-navbar {
            padding-top: $big-navbar-height;
        }

        // DO NEVER EVER EVER PUT THE NEXT LINE ON BODY,
        // WILL BREAK Webkit/Blink (iOS, Android, Chrome, Opera).
        // scrolling is auto on html/documentElement so no need for this.
        // This is keep for documentation purpose preventing future bugs:
        // overflow: auto; // value 'scroll' will break too
    }

    @import '../utils/signup-btns.styl';

    /**
        Some small utilities,
        they *may* upgrade to its own class as
        part of the Styleguide elements.
    **/

    /** Customized or extended Bootstrap components **/
    /* bottom modal */
    .modal.bottom {
        .modal-dialog {
            position: absolute;
            padding: 10px;
            left: 0;
            right: 0;
            bottom: 0;
        }
    }

    /* top modal: modals appear on top by default, but
        needs an extra margin to avoid hide the top
        nav (thats blocked but gets more nice UI)
    */
    .modal {
        .modal-dialog {
            padding-top: $app-navbar-height;
            @media $media-big-navbar {
                padding-top: $big-navbar-height;
            }
        }
    }

    /* why modals has not the standard modal-backdrop? anyway, fix.. */
    .modal {
        background: rgba(0, 0, 0, .4);
    }

    #errorModal {
        // On top of items-disable-layer, for errors parsing/loading activity or bindings
        z-index: 101050;
    }

    // Special icon color for feedback 'lamp'
    app-feedback-entry {
        .ion-lightbulb,
        .ion-ios-lightbulb-outline {
            color: #f0ad4e;
        }
    }

    // skip-navigation link has assigned sr-only on markup, placed as first
    // body element and we display, place and style it properly when focused
    // to meet accessibility guidelines.
    #skip-navigation:focus {
        position: absolute;
        clip: initial;
        margin: 0;
        z-index: 90900;
        top: 15px;
        left: 15px;
        width: auto;
        height: auto;
        background: #fdf6e7;
        outline-offset: 0;
        padding: 6px 30px;
    }

    .App-activities {
        background: White;
    }
    .ion-ios-lightbulb {
        color: #f0ad4e;
    }

    // In order to support the component ActionSheet
    // and because we have a global SmartNavBar right now,
    // we need additional code to set the SmartNavBar/AppNav under
    // a backdrop when the ActionSheet is opened.
    .AppNav .SmartNavBar {
        position: relative;
    }
    .AppNav:after {
        content: '';
        @extend .ActionSheetBackdrop
    }
    .has-ActionSheet-open .AppNav:after {
        opacity: 1;
        pointer-events: auto;
    }

    input,
    textarea {
        +input-placeholder() {
            font-weight: 200;
        }
    }
    //legend class to emulate legend css when a legend tag is not semantically correct
    .legend
    legend {
            display: block;
            width: 100%;
            padding: 0;
            margin-top: .5em;
            margin-bottom: 1.0em;
            font-size: 21px;
            line-height: inherit;
            color: $gray-dark;
            border: 0;
            border-bottom: 1px solid $gray-lighter;
    }
    fieldset {
        margin-top: .75em;
    }
/**
To ensure that the HTML 5 landmarks display properly for sighted users in older browsers, you probably want to assign display:block to them in the CSS. Otherwise they may display inline, which could break the page's layout. You may also want to take advantage of the opportunity to set other HTML 5 elements to display:block for backward-compatibility purposes. Note that in some cases you may have a reason to set some of these to display:inline, so use your judgment here.
**/
/* landmarks */
    article, aside, footer, header, main, nav, section,

/* other HTML 5 elements that should (probably)
be set to display:block */
    audio, canvas, datalist, details, figcaption,
    figure, output, progress, summary, video {
       display:block;
    }
}
