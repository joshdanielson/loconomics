@using WebMatrix.WebData;
@*
    Get the list and details of job titles attached to the logged user (a service professional) and any alerts for those job titles.
    The collection of job titles is called the "User Job Profile".
    It allows to edit the data of each one, and special actions on each like deactive/reactive.
    We allow client-only users to use the POST API, the others are restricted per method to ServiceProfessionals.

    EXAMPLES {
        "User External Listings": {
            "url": "/api/v1/en-US/me/external-listings",
            "get": { },
            "post": {
                "platformID": 1,
                "jobTitles": [106],
                "title": "My listing at LC",
                "notes": "Something public about me"
            }
        },
        "User External Listing (item)": {
            "url": "/api/v1/en-US/me/external-listing/1",
            "get": { },
            "put": {
                "jobTitles": [106],
                "title": "My listing at LC",
                "notes": "Something public about me"
            },
            "delete": { }
        }
    }
*@
@functions {
    public class RestMeExternalListings : RestWebPage
    {
        /// <summary>
        /// Retrieve the external listings of the user
        /// </summary>
        /// <returns></returns>
        public override dynamic Get()
        {
            // Parameters
            int userID = WebSecurity.CurrentUserId;

            // Item ID
            if (UrlData.Count == 1 && UrlData[0].IsInt())
            {
                var itemID = UrlData[0].AsInt(0);
                var item = LcRest.UserExternalListing.Get(userID, itemID);

                if (item != null)
                {
                    return item;
                }

                throw new HttpException(404, "External Listing not found.");
            }
            else if (UrlData.Count == 0)
            {
                return LcRest.UserExternalListing.GetList(userID);
            }
            return base.Get();
        }
    }
}
@{
    // We allow client-only users to use the POST API, the others are restricted per method to ServiceProfessionals
    Response.RestRequiresUser(LcData.UserInfo.UserType.ServiceProfessional);
    new RestMeExternalListings().JsonResponse(this);
}
