<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <appSettings>
    <!-- IMPORTANT: Every empty value in next settings MUST BE SET at hosting level / environment variable
        All sensitive data MUST be set that way.
        Channel setting MUST BE SET at hosting environment variable for correct execution.
        Other existent values can be replaced at hosting settings too, but with a working preset here for
        the 'localdev' channel, expectation is that in a local IIS environment variables cannot be used
        to overwrite this values (like Azure allows, both for appSettings and connectionStrings) so
        the recommended values for development are used, taking care that a change on this file affects
        everyone (a possible workaround, in case a very specific local change is needed, is to do the change
        and flag the file with Git to not commit it).
    -->
    <!-- To distinguish between: localdev, dev, testing, stating, live (AKA production) -->
    <add key="Channel" value="localdev" />
    <add key="LogSuccessSendMail" value="false" />
    <add key="enableSimpleMembership" value="true" />
    <!-- Braintree configurations -->
    <add key="Braintree.InSandbox" value="true" />
    <add key="Braintree.Sandbox.MerchantId" value="" />
    <add key="Braintree.Sandbox.PublicKey" value="" />
    <add key="Braintree.Sandbox.PrivateKey" value="" />
    <add key="Braintree.Sandbox.MerchantAccountId" value="" />
    <add key="Braintree.Production.MerchantId" value="" />
    <add key="Braintree.Production.PublicKey" value="" />
    <add key="Braintree.Production.PrivateKey" value="" />
    <add key="Braintree.Production.MerchantAccountId" value="" />
    <add key="Braintree.FraudProtectionTools.Enabled" value="true" />
    <!-- Facebook config -->
    <add key="facebookAppId" value="" />
    <add key="facebookAppSecret" value="" />

    <!-- At Azure, set the value of this app-setting to hold password securely, and not at system.net-smtp, like connectionStrings -->
    <!-- At 'localdev' channel, send an email is disabled by code (see LcMessaging.SendMail) but some data, even dummy, is required to prevent crash at some fields -->
    <add key="smtpUserName" value="" />
    <add key="smtpPassword" value="" />
    <add key="smtpFrom" value="" />
    <add key="smtpHost" value="localhost" />
    <add key="smtpPort" value="" />
    <add key="smtpEnableSsl" value="" />
  </appSettings>
  <connectionStrings>
    <!-- ENVIRONMENT SETTING: recommended value for localdev, otherwise the final setting is set-up at the hosting with the password -->
    <add name="sqlloco"
         connectionString="Server=localhost\SQLEXPRESS;Database=loconomics;Integrated Security=SSPI"
         providerName="System.Data.SqlClient" />
    <!-- for CalendarDll: the same sqlloco connectionstring but adapted to EntityFramework
      value of 'provider connection string=' with the value of previous 'sqlloco' connetionString plus additional parameters needed by EF
      Follow next example, replacing the __connection_string__ placeholder with the same 'sqlloco' value:
      metadata=res://*/Data.loconomics.csdl|res://*/Data.loconomics.ssdl|res://*/Data.loconomics.msl;provider=System.Data.SqlClient;provider connection string=&quot;__connection_string__;multipleactiveresultsets=True;application name=EntityFramework&quot;
      
      At AZURE, needs to setup the connectionString type as 'custom' and this need to exists here at the web.config to work with the providerName correctly set.
      At AZURE, the entities used here '&quot;' MUST be replaced with just '&' in order to work (the entitiy is required by this file being an XML)
      -->
    <add name="loconomicsEntities"
         connectionString="metadata=res://*/Data.loconomics.csdl|res://*/Data.loconomics.ssdl|res://*/Data.loconomics.msl;provider=System.Data.SqlClient;provider connection string=&quot;Server=localhost\SQLEXPRESS;Database=loconomics;Integrated Security=SSPI;multipleactiveresultsets=True;application name=EntityFramework&quot;"
         providerName="System.Data.EntityClient" />
  </connectionStrings>
  <!-- Hosting needs we specify this general system.data settings while local IIS works fine without it -->
  <system.data>
    <DbProviderFactories>
      <remove invariant="System.Data.SqlServerCe.4.0" />
      <remove invariant="MySql.Data.MySqlClient" />
      <add invariant="System.Data.SqlServerCe.4.0" name="Microsoft® SQL Server® Compact 4.0" description=".NET Framework Data Provider for Microsoft SQL Server Compact" type="System.Data.SqlServerCe.SqlCeProviderFactory, System.Data.SqlServerCe, Version=4.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
      <add name="MySQL Data Provider" invariant="MySql.Data.MySqlClient" description=".Net Framework Data Provider for MySQL" type="MySql.Data.MySqlClient.MySqlClientFactory, MySql.Data, Version=6.3.7.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d" />
    </DbProviderFactories>
  </system.data>
  <system.web>
    <roleManager enabled="true" cacheRolesInCookie="true" defaultProvider="QuickStartRoleManagerSqlProvider" cookieName=".ASPXROLES" cookiePath="/" cookieTimeout="30" cookieRequireSSL="false" cookieSlidingExpiration="true" createPersistentCookie="false" cookieProtection="All">
      <providers>
        <add name="QuickStartRoleManagerSqlProvider" type="System.Web.Security.SqlRoleProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" connectionStringName="sqlloco" applicationName="SecurityQuickStart" />
      </providers>
    </roleManager>
    <!-- Error pages: there are settings under system.webServer/httpErrors too for this -->
    <customErrors mode="RemoteOnly" defaultRedirect="~/Errors/Error.cshtml" redirectMode="ResponseRewrite">
      <error statusCode="404" redirect="~/Errors/Error404.cshtml" />
    </customErrors>
    <trace enabled="true" localOnly="true" />
    <!-- At hosting, this will change to false with some set-up -->
    <compilation debug="true" targetFramework="4.0" />
    <!-- We use this timeout (60 minutes) as the non-persistent session timeout (its not standard) -->
    <sessionState mode="InProc"
                  timeout="60"
                  cookieName="lcSessionID"
                  cookieless="UseCookies"/>
    <authentication mode="Forms">
      <!-- We use this timeout for persistent user sessions ('remember me' checkbox).
        Is the minimum inactivity time needed to force user to login again, with persistent option.
        1 month = 43200 minutes.
        Asp.net share this for non-persistent sessions ('remember me' not checked), but we have a 
        code on global.asax/session_start to force non-persistent cookies die and force user to login again.
        This last means, sessionState/timeout is the non-persistent session timeout! (its not standard) -->
      <forms name="lcAuth" timeout="43200" />
    </authentication>
    <trust level="Full" />
    <httpRuntime executionTimeout="90" maxRequestLength="4096" />
  </system.web>
  <system.webServer>
    <directoryBrowse enabled="false" />
    <security>
      <requestFiltering>
        <fileExtensions>
          <remove fileExtension=".cshtml" />
          <add fileExtension=".cshtml" allowed="true" />
        </fileExtensions>
        <hiddenSegments>
          <add segment="_specialRoutes" />
          <add segment="_logs" />
          <add segment="_DBUpdate" />
        </hiddenSegments>
      </requestFiltering>
    </security>
    <handlers>
      <!-- IMPORTANT! NEXT IS TO ENABLE HTTP METHODS PUT AND DELETE IN ORDER TO IMPLEMENT THE RESTful API.
          THIS IS NEED ONLY ON MACHINES WITH IIS 7.5, USUALLY WINDOWS-7 FOR LOCAL DEVELOPMENT,
          WHILE THE SERVER IS USING IIS 8 THAT HAS THAT METHODS ENABLED BY DEFAULT.
          IS REQUIRED TO REMOVE THE WEBDAV MODULE TOO (or to look for a way to disabled it for this app in local dev machine) -->
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE" modules="IsapiModule" scriptProcessor="c:\Windows\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" resourceType="Unspecified" requireAccess="Script" preCondition="classicMode,runtimeVersionv4.0,bitness64" responseBufferLimit="0" />
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE" type="System.Web.Handlers.TransferRequestHandler" resourceType="Unspecified" requireAccess="Script" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
    <rewrite>
      <rules>
        <clear />
        <!-- Maintenance mode -->
        <rule name="maintenance-mode" enabled="false" stopProcessing="true">
          <match url="(.*)" ignoreCase="true" />
          <action type="Rewrite" url="/maintenance.html" />
        </rule>
        <!-- General HTTP to HTTPS redirect only for live site -->
        <rule name="HTTP to HTTPS redirect" stopProcessing="true">
          <match url="(.*)" />
          <conditions logicalGrouping="MatchAll">
            <add input="{HTTPS}" pattern="off" ignoreCase="true" />
            <add input="{HTTP_HOST}" pattern="^(www\.)?loconomics\.com$" ignoreCase="true" />
          </conditions>
          <action type="Redirect" redirectType="Found" url="https://loconomics.com/{R:1}" />
        </rule>
        <!-- Just one domain/entry point: redirect 'www.' to canonical domain -->
        <rule name="WWW to domain redirect" stopProcessing="true">
          <match url="(.*)" />
          <conditions logicalGrouping="MatchAll">
            <add input="{HTTPS}" pattern="on" ignoreCase="true" />
            <add input="{HTTP_HOST}" pattern="^www\.loconomics\.com$" ignoreCase="true" />
          </conditions>
          <action type="Redirect" redirectType="Found" url="https://loconomics.com/{R:1}" />
        </rule>
        <!-- Caching assets -->
        <rule name="Filename-based cache busting">
          <match url="^(.+)\.\d+(\.(js|css|png|jpg|gif|ico)$)" />
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
          </conditions>
          <action type="Rewrite" url="{R:1}{R:2}" />
        </rule>
        <!-- Landing pages -->
        <rule name="Welcome/landing pages - No extension needed for plain html files">
          <match url="^(welcome\/.+$)" />
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
          </conditions>
          <action type="Rewrite" url="{R:1}.html" />
        </rule>
      </rules>
    </rewrite>
    <httpErrors existingResponse="PassThrough">
      <remove statusCode="404" subStatusCode="-1" />
      <error statusCode="404" prefixLanguageFilePath="" path="/Errors/Error404/" responseMode="ExecuteURL" />
    </httpErrors>
    <httpCompression directory="%SystemDrive%\inetpub\temp\IIS Temporary Compressed Files" minFileSizeForComp="128">
      <scheme name="gzip" dll="%Windir%\system32\inetsrv\gzip.dll" />
      <staticTypes>
        <add mimeType="text/*" enabled="true" />
        <add mimeType="message/*" enabled="true" />
        <add mimeType="application/javascript" enabled="true" />
        <add mimeType="application/json" enabled="true" />
        <add mimeType="*/*" enabled="false" />
      </staticTypes>
    </httpCompression>
    <urlCompression doStaticCompression="true" doDynamicCompression="true" />
    <staticContent>
      <clientCache cacheControlCustom="public" cacheControlMaxAge="370.00:00:00" cacheControlMode="UseMaxAge" />
      <remove fileExtension=".css" />
      <mimeMap fileExtension=".css" mimeType="text/css" />
      <remove fileExtension=".js" />
      <mimeMap fileExtension=".js" mimeType="application/javascript" />
      <remove fileExtension=".json" />
      <mimeMap fileExtension=".json" mimeType="application/json" />
      <remove fileExtension=".rss" />
      <mimeMap fileExtension=".rss" mimeType="application/rss+xml; charset=UTF-8" />
      <remove fileExtension=".html" />
      <mimeMap fileExtension=".html" mimeType="text/html; charset=UTF-8" />
      <remove fileExtension=".xml" />
      <mimeMap fileExtension=".xml" mimeType="application/xml; charset=UTF-8" />
      <remove fileExtension=".mp4" />
      <mimeMap fileExtension=".mp4" mimeType="video/mp4" />
      <remove fileExtension=".m4v" />
      <mimeMap fileExtension=".m4v" mimeType="video/m4v" />
      <remove fileExtension=".ogg" />
      <mimeMap fileExtension=".ogg" mimeType="video/ogg" />
      <remove fileExtension=".ogv" />
      <mimeMap fileExtension=".ogv" mimeType="video/ogg" />
      <remove fileExtension=".webm" />
      <mimeMap fileExtension=".webm" mimeType="video/webm" />
      <remove fileExtension=".svg" />
      <mimeMap fileExtension=".svg" mimeType="image/svg+xml" />
      <remove fileExtension=".svgz" />
      <mimeMap fileExtension=".svgz" mimeType="image/svg+xml" />
      <remove fileExtension=".eot" />
      <mimeMap fileExtension=".eot" mimeType="application/vnd.ms-fontobject" />
      <remove fileExtension=".otf" />
      <mimeMap fileExtension=".otf" mimeType="font/otf" />
      <remove fileExtension=".woff" />
      <mimeMap fileExtension=".woff" mimeType="font/x-woff" />
      <remove fileExtension=".woff2" />
      <mimeMap fileExtension=".woff2" mimeType="application/font-woff2" />
    </staticContent>
    <!-- ENABLE REST AT HOSTING AND LOCAL -->
    <httpProtocol>
      <customHeaders>
        <remove name="Access-Control-Allow-Origin" />
        <remove name="Access-Control-Allow-Headers" />
        <remove name="Access-Control-Allow-Methods" />
        <add name="Access-Control-Allow-Origin" value="*" />
        <!-- iOS WkWebView require extra headers to be validated (accept-encoding,origin,accept-language) while others don't ask for this
        because are included in the 'basic profile' that does not require CORS. -->
        <add name="Access-Control-Allow-Headers" value="Content-Type,alk,alu,Authorization,accept-encoding,origin,accept-language" />
        <add name="Access-Control-Allow-Methods" value="GET, POST, OPTIONS, PUT, DELETE" />
        <remove name="X-Powered-By" />
        <remove name="X-AspNetWebPages-Version" />
        <remove name="X-AspNet-Version" />
      </customHeaders>
    </httpProtocol>
    <!-- REQUIRED FOR AZURE: it enables HTTP methods PUT and DELETE to work under Azure; not needed on other hostings like Winhost -->
    <modules runAllManagedModulesForAllRequests="true"/>
    <!-- Not sure why this was added to web.root.config file originally, maybe when migrating to Azure and related with following line? -->
    <validation validateIntegratedModeConfiguration="false"/>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">     
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebMatrix.WebData" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages.Razor" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebMatrix.Data" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>
